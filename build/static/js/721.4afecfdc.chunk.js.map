{"version":3,"file":"static/js/721.4afecfdc.chunk.js","mappings":"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","sources":["data/data.js","Component/chart/chart.js","Component/Reports/Report.js"],"sourcesContent":["const data = [\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 5000,\r\n    date: new Date(\"2023-01-04\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 3000,\r\n    date: new Date(\"2023-02-15\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 4500,\r\n    date: new Date(\"2023-04-22\"),\r\n  },\r\n  // November\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 2000,\r\n    date: new Date(\"2023-02-10\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 1500,\r\n    date: new Date(\"2023-03-18\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 3500,\r\n    date: new Date(\"2023-04-25\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 4000,\r\n    date: new Date(\"2023-01-29\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 2500,\r\n    date: new Date(\"2023-02-30\"),\r\n  },\r\n  // December\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 1800,\r\n    date: new Date(\"2023-03-05\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 3200,\r\n    date: new Date(\"2023-02-12\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 2800,\r\n    date: new Date(\"2023-01-19\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 2200,\r\n    date: new Date(\"2023-03-24\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 3700,\r\n    date: new Date(\"2023-02-28\"),\r\n  },\r\n  // January\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 3900,\r\n    date: new Date(\"2023-03-05\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 4200,\r\n    date: new Date(\"2023-04-11\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 3800,\r\n    date: new Date(\"2023-01-18\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 4700,\r\n    date: new Date(\"2023-02-24\"),\r\n  },\r\n  {\r\n    name: \"fuel\",\r\n    description: \"car\",\r\n    amount: 4100,\r\n    date: new Date(\"2024-03-31\"),\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n// import faker from 'faker';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \" Chart 2023 year\",\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\nfunction extractamount(data) {\r\n  const amounts = [];\r\n\r\n  data.forEach((item) => {\r\n    const index = item.date;\r\n\r\n    amounts[index] = item.amount;\r\n  });\r\n\r\n  console.log(amounts);\r\n  return amounts;\r\n}\r\n\r\nfunction Barchart({ totalarr }) {\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Expense Limit\",\r\n        data: Array(12).fill(20000),\r\n        backgroundColor: \"blue\",\r\n      },\r\n      {\r\n        label: \"Monthly Expense\",\r\n        data: extractamount(totalarr) || [2000, 4000, 2500],\r\n        backgroundColor: \"green\",\r\n      },\r\n    ],\r\n  };\r\n  return <Bar options={options} data={data} />;\r\n}\r\n\r\nexport default Barchart;\r\n","import data from \"../../data/data\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Barchart from \"../chart/chart\";\r\nconst labels = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\nconst TAX_RATE = 0.18;\r\n\r\nfunction gettotalamount(obj) {\r\n  const amountByMonth = obj.reduce((acc, item) => {\r\n    const month = item.date.getMonth();\r\n    const year = item.date.getFullYear();\r\n    const key = month;\r\n    const iskey = acc.find((each) => each.date === key);\r\n\r\n    if (!iskey) {\r\n      acc.push({\r\n        year: year,\r\n        date: key,\r\n        limit: 50000,\r\n        name: item.name,\r\n        amount: item.amount || 0,\r\n      });\r\n      return acc;\r\n    }\r\n\r\n    iskey.amount += item.amount || 0;\r\n    return acc;\r\n  }, []);\r\n\r\n  return amountByMonth;\r\n}\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction total(items) {\r\n  return items.reduce((sum, { amount }) => sum + amount, 0);\r\n}\r\n\r\nexport default function ViewReports() {\r\n  gettotalamount(data);\r\n  let totaldata = gettotalamount(data) || [];\r\n\r\n  const invoiceSubtotal = total(totaldata);\r\n  const invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\n  const invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n  const size = { fontSize: { xs: 13, sm: 20 }, fontWeight: \"bold\" };\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ mixWidth: 600 }} aria-label=\"spanning table\">\r\n          <TableHead>\r\n            <TableRow sx={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n              <TableCell\r\n                align=\"center\"\r\n                colSpan={3}\r\n                sx={{ fontSize: 20, fontWeight: \"bold\" }}\r\n              >\r\n                Details\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"right\"\r\n                sx={{ fontSize: 20, fontWeight: \"bold\" }}\r\n              >\r\n                Price\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow sx={{ background: \"pink\", size: \"medium\" }}>\r\n              <TableCell sx={size}>Date</TableCell>\r\n              <TableCell sx={size} align=\"right\">\r\n                Name\r\n              </TableCell>\r\n              <TableCell sx={size} align=\"right\">\r\n                {\" \"}\r\n                Monthly limit\r\n              </TableCell>\r\n              <TableCell sx={size} align=\"right\">\r\n                Amount\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {totaldata.map((each, index) => (\r\n              <TableRow key={index}>\r\n                {/* <TableCell>{each.date}</TableCell> */}\r\n                {/* {console.log(each.date)} */}\r\n                <TableCell>\r\n                  {labels[each.date] ? labels[each.date] : \"January\"}-\r\n                  {each.year}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{each.name}</TableCell>\r\n                <TableCell align=\"right\">{each.limit}</TableCell>\r\n                <TableCell align=\"right\">{each.amount}</TableCell>\r\n                {/* <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell> */}\r\n              </TableRow>\r\n            ))}\r\n\r\n            <TableRow>\r\n              <TableCell rowSpan={3} />\r\n              <TableCell colSpan={2}>Subtotal</TableCell>\r\n              <TableCell align=\"right\">{total(totaldata)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Tax</TableCell>\r\n              <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(\r\n                0\r\n              )} %`}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Total</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Barchart totalarr={totaldata}></Barchart>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n"],"names":["name","description","amount","date","Date","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","title","display","text","labels","extractamount","data","amounts","forEach","item","index","console","log","_ref","totalarr","datasets","label","Array","fill","backgroundColor","_jsx","Bar","TAX_RATE","gettotalamount","obj","reduce","acc","month","getMonth","year","getFullYear","key","iskey","find","each","push","limit","ccyFormat","num","concat","toFixed","total","items","sum","ViewReports","totaldata","invoiceSubtotal","invoiceTaxes","invoiceTotal","size","fontSize","xs","sm","fontWeight","_jsxs","_Fragment","children","TableContainer","component","Paper","Table","sx","mixWidth","TableHead","TableRow","TableCell","align","colSpan","background","TableBody","map","rowSpan","Barchart"],"sourceRoot":""}