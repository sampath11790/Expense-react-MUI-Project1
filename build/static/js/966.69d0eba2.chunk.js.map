{"version":3,"file":"static/js/966.69d0eba2.chunk.js","mappings":"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","sources":["Store/Expense-thunk.js","Component/Expense-List/listItem.js/listItem.js","Component/Expense-List/ExpenseForm/ExpenseForm.js","Component/Dropdown/Dropdown.js","Component/pagination/pagination.js","Component/Expense-List/list/list.js","Component/LeaderBoard/LeaderBoard.js","Store/LeaderBoard-thunk.js"],"sourcesContent":["import LeaderBoard from \"../Component/LeaderBoard/LeaderBoard\";\r\nimport { ExpenseSliceAction } from \"./ExpenseSlice\";\r\n\r\nexport const postData = (obj, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const jsondata = JSON.stringify(obj);\r\n      const response = await fetch(\"http://23.21.23.89:3000/post-product\", {\r\n        method: \"POST\",\r\n        body: jsondata,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n      //calling get function by change use effect value\r\n      dispatch(ExpenseSliceAction.callgetFunction());\r\n      // dispatch(ExpenseSliceAction.setSentData(data));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getallExpense = (token, page, pageCount) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://23.21.23.89:3000/expense?page=${page}&pageCount=${pageCount}`,\r\n        {\r\n          method: \"GET\",\r\n\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n      const fetcheddata = await response.json();\r\n      // console.log(\"fetcheddata\", fetcheddata);\r\n      //want send proper data here we are getting array\r\n      dispatch(ExpenseSliceAction.setSentData(fetcheddata));\r\n      // if (ispremium) {\r\n      //   dispatch(LeaderBoard(token));\r\n      // }\r\n    } catch (error) {\r\n      console.error(error);\r\n      return;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteItem = (id, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://23.21.23.89:3000/post-product/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      //calling get function by change use effect value\r\n      dispatch(ExpenseSliceAction.callgetFunction());\r\n      // if (ispremium) {\r\n      //   dispatch(LeaderBoard(token));\r\n      // }\r\n\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\n// import ExpenseContext from \"../context/ExpenseContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteItem, getallExpense } from \"../../../Store/Expense-thunk\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport \"./liststyle.css\";\r\nimport { getLeaderBoard } from \"../../../Store/LeaderBoard-thunk\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst ListItem = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n  // const call = useSelector((state) => state.expenseslice.iscall);\r\n\r\n  // useEffect(() => {\r\n  //   const token = localStorage.getItem(\"token\");\r\n  //   const ispremium = localStorage.getItem(\"ispremium\");\r\n  //   if (ispremium === \"true\") {\r\n  //     dispatch(getallExpense(token));\r\n  //     dispatch(getLeaderBoard(token));\r\n  //   } else {\r\n  //     dispatch(getallExpense(token));\r\n  //   }\r\n  // }, [call]);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  // const ctx = useContext(ExpenseContext);\r\n\r\n  function DeleteHandler(id, token) {\r\n    const ispremium = localStorage.getItem(\"ispremium\");\r\n    dispatch(deleteItem(item.id, token));\r\n  }\r\n  return (\r\n    <tr key={item.name} className=\"some\">\r\n      {/* <td>{item.date}</td> */}\r\n      <td>{item.name}</td>\r\n      <td>{item.description}</td>\r\n      <td>{item.amount}</td>\r\n      <td>\r\n        {\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            size=\"small\"\r\n            color=\"red\"\r\n            onClick={() => DeleteHandler(item.id, token)}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        }\r\n      </td>\r\n    </tr>\r\n    // <li key={item.id} style={{ fontSize: 20, listStyle: \"none\" }}>\r\n    //   <span>{item.name}</span>--\r\n    //   <span>{item.description}</span>--\r\n    //   <span>{item.amount}</span>\r\n    //   <button onClick={() => dispatch(deleteItem(item.id))}>Delete</button>\r\n    // </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postData } from \"../../../Store/Expense-thunk\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { AddToQueueOutlined } from \"@mui/icons-material\";\r\n\r\nconst Initial_state = { name: \"\", description: \"\", amount: \"\" };\r\nconst ExpenseForm = () => {\r\n  const [enteredInput, setenteredInput] = useState(Initial_state);\r\n  const Expense = useSelector((state) => state.expenseslice.data);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  const addEnteredInput = (e) => {\r\n    setenteredInput({ ...enteredInput, [e.target.name]: e.target.value });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    Dispatch(postData(enteredInput, token));\r\n  };\r\n  return (\r\n    <div style={{ marginTop: 10 }}>\r\n      <TextField\r\n        sx={{ m: 1.5, p: -10 }}\r\n        type=\"text\"\r\n        // value={enteredInput.name}\r\n        name=\"name\"\r\n        onChange={addEnteredInput}\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        sx={{ m: 1.5 }}\r\n        type=\"text\"\r\n        // value={enteredInput.description}\r\n        name=\"description\"\r\n        onChange={addEnteredInput}\r\n        label=\"Description\"\r\n        variant=\"outlined\"\r\n      />\r\n\r\n      <TextField\r\n        sx={{ m: 1.5 }}\r\n        type=\"amount\"\r\n        // value={enteredInput.amount}\r\n        name=\"amount\"\r\n        onChange={addEnteredInput}\r\n        label=\"Amount\"\r\n        variant=\"outlined\"\r\n      />\r\n      <br />\r\n\r\n      <Button\r\n        sx={{\r\n          width: { sx: 100, sm: 200, md: 300 },\r\n          marginTop: 2,\r\n          color: \"white\",\r\n          borderColor: \"white\",\r\n          variant: \"contained\",\r\n        }}\r\n        variant=\"contained\"\r\n        onClick={submitHandler}\r\n        startIcon={<AddToQueueOutlined />}\r\n      >\r\n        Add Expense\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState, useMemo, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getallExpense } from \"../../Store/Expense-thunk\";\r\n\r\nfunction DropDownExpense({ totalcount = 17, page, pageCount, setPagecount }) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   const token = localStorage.getItem(\"token\");\r\n  //   dispatch(getallExpense(token, page, pageCount));\r\n  // }, [pageCount]);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = (e) => {\r\n    const { myValue } = e.currentTarget.dataset;\r\n    setPagecount(myValue);\r\n    // console.log(\"myValue\", myValue);\r\n    setAnchorEl(null);\r\n  };\r\n  const pages = useMemo(() => Math.ceil(totalcount / 5), [totalcount]);\r\n  const valueHandler = (event) => {\r\n    const { myValue } = event.currentTarget.dataset;\r\n    console.log(myValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        id=\"Menu\"\r\n        aria-controls={open ? \"Menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n      >\r\n        Select\r\n      </Button>\r\n      <Menu\r\n        id=\"Menu\"\r\n        aria-labelledby=\"Menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        {[...Array(pages)].map((_, index) => (\r\n          <MenuItem\r\n            data-my-value={(index + 1) * 5}\r\n            onClick={handleClose}\r\n            onChange={() => valueHandler((index + 1) * 5)}\r\n          >\r\n            {(index + 1) * 5}\r\n          </MenuItem>\r\n        ))}\r\n\r\n        {/* <MenuItem onClick={handleClose}>10</MenuItem>\r\n        <MenuItem onClick={handleClose}>15</MenuItem> */}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\nexport default DropDownExpense;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getallExpense } from \"../../Store/Expense-thunk\";\r\nimport DropDownExpense from \"../Dropdown/Dropdown\";\r\nimport { Box } from \"@mui/material\";\r\nimport { ExpenseSliceAction } from \"../../Store/ExpenseSlice\";\r\nlet iscall = false;\r\nexport default function PaginationList({ count, totalcount }) {\r\n  const [Page, setPage] = useState(1);\r\n  const [pageCount, setPagecount] = useState(0);\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    if (iscall == true) {\r\n      dispatch(getallExpense(token, Page, pageCount));\r\n      dispatch(ExpenseSliceAction.updatePage(Page));\r\n      dispatch(ExpenseSliceAction.updatePageCount(pageCount));\r\n      return;\r\n    }\r\n\r\n    iscall = true;\r\n    return;\r\n  }, [Page, pageCount]);\r\n\r\n  const pageHandler = (e, value) => {\r\n    e.preventDefault();\r\n\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <Box display={\"flex\"} flexDirection={\"row\"}>\r\n      <DropDownExpense\r\n        totalcount={totalcount}\r\n        page={Page}\r\n        pageCount={pageCount}\r\n        setPagecount={setPagecount}\r\n      ></DropDownExpense>\r\n      <Stack spacing={12}>\r\n        <Pagination\r\n          defaultPage={1}\r\n          count={count}\r\n          onChange={pageHandler}\r\n          page={Page || 0}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n        ></Pagination>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport ListItem from \"../listItem.js/listItem\";\r\n// import FormItem from \"../Form/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ExpenseForm from \"../ExpenseForm/ExpenseForm\";\r\nimport { Pagination, Table } from \"@mui/material\";\r\nimport LeaderBoard from \"../../LeaderBoard/LeaderBoard\";\r\nimport { getallExpense } from \"../../../Store/Expense-thunk\";\r\nimport { getLeaderBoard } from \"../../../Store/LeaderBoard-thunk\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PaginationList from \"../../pagination/pagination\";\r\n\r\nconst ExpenseList = () => {\r\n  const dispatch = useDispatch();\r\n  const expenses = useSelector((state) => state.expenseslice);\r\n  const LeaderBoarddata = useSelector(\r\n    (state) => state.expenseslice.LeaderBoard\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n  const call = useSelector((state) => state.expenseslice.iscall);\r\n  const ispremium = localStorage.getItem(\"ispremium\");\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const ispremium = localStorage.getItem(\"ispremium\");\r\n    if (ispremium === \"true\") {\r\n      // dispatch(getallExpense(token));\r\n      console.log(\r\n        \"call time page,pagecount\",\r\n        expenses.page,\r\n        expenses.pageCount\r\n      );\r\n      console.log(\"is premium true\");\r\n      dispatch(getallExpense(token, expenses.page, expenses.pageCount));\r\n      dispatch(getLeaderBoard(token));\r\n    } else {\r\n      console.log(\"is premium false \");\r\n      // dispatch(getallExpense(token));\r\n      dispatch(getallExpense(token, expenses.page, expenses.pageCount));\r\n    }\r\n  }, [call]);\r\n\r\n  // const ctx = useContext(ExpenseContext);\r\n  // console.log(ctx.data);\r\n  return (\r\n    <div>\r\n      <ExpenseForm></ExpenseForm>\r\n\r\n      <Table\r\n        stripe=\"odd\"\r\n        hoverRow\r\n        sx={{ width: { sm: \"100%\", md: \"60%\" }, m: \"0 auto\", mt: 10 }}\r\n      >\r\n        <thead>\r\n          <tr className=\"some\">\r\n            {/* <th>Date</th> */}\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th>Amount&nbsp;(Rs)</th>\r\n            <th>Button&nbsp;(icon)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {[...expenses.data].map((each) => (\r\n            // {initial.map((each) => (\r\n            <ListItem key={each.id} item={each}></ListItem>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <div className=\"pagination-cont\">\r\n        <PaginationList count={expenses.count}></PaginationList>\r\n      </div>\r\n\r\n      <div>{ispremium == \"true\" && <LeaderBoard></LeaderBoard>}</div>\r\n\r\n      {/* <Pagination count={10} variant=\"outlined\" shape=\"rounded\" /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLeaderBoard } from \"../../Store/LeaderBoard-thunk\";\r\nimport \"./Leaderboard.css\";\r\nimport { Box, Button, Grid, Paper } from \"@mui/material\";\r\n\r\nconst LeaderBoard = () => {\r\n  const [Hide, setHide] = useState(true);\r\n  const [show, setshow] = useState(false);\r\n  const LeaderBoarddata = useSelector(\r\n    (state) => state.expenseslice.LeaderBoard\r\n  );\r\n  const dispatch = useDispatch();\r\n  const testfun = () => {\r\n    setHide(false);\r\n    setshow(!show);\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"test\");\r\n    dispatch(getLeaderBoard(token));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <ul> */}\r\n      {Hide && (\r\n        <Button variant=\"contained\" onClick={() => testfun()}>\r\n          Show LeaderBoard\r\n        </Button>\r\n      )}\r\n\r\n      {!Hide && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setHide(true);\r\n            setshow(false);\r\n          }}\r\n        >\r\n          Hide LeaderBoard\r\n        </Button>\r\n      )}\r\n      {show && (\r\n        <Box>\r\n          <Grid\r\n            container\r\n            spacing={1}\r\n            // xs={12}\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: { sx: \"start\", sm: \"center\", md: \"center\" },\r\n            }}\r\n          >\r\n            {LeaderBoarddata.map((each) => (\r\n              <Grid item xs={4}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 1,\r\n                    bgcolor: \"lightgreen\",\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: { md: \"fr 2fr\" },\r\n                    gap: 2,\r\n                    width: 350,\r\n                    color: \"black\",\r\n                  }}\r\n                >\r\n                  Name= {each.name}----totalCost =\r\n                  {each.totalcost ? each.totalcost : \"NO Expense\"}\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderBoard;\r\n","import { ExpenseSliceAction } from \"./ExpenseSlice\";\r\n\r\nconst transformData = async (data) => {\r\n  let value = [];\r\n  for (let key in data) {\r\n    value.push(data[key]);\r\n    // console.log(data[key]);\r\n  }\r\n  return value;\r\n};\r\n\r\nexport const getLeaderBoard = (token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://23.21.23.89:3000/premium/leaderboard`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(\"leaderboard data\", data);\r\n      const transData = await transformData(data);\r\n      // console.log(\"transData\", transData);\r\n      //calling get function by change use effect value\r\n      dispatch(ExpenseSliceAction.updateLeaderBoard(transData));\r\n      // console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n"],"names":["getallExpense","token","page","pageCount","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","dispatch","response","fetcheddata","wrap","_context2","prev","next","fetch","concat","method","headers","Authorization","sent","json","ExpenseSliceAction","t0","console","error","abrupt","stop","_x2","apply","arguments","_ref","item","useDispatch","useNavigate","localStorage","getItem","DeleteHandler","id","_ref3","_callee3","data","_context3","log","_x3","deleteItem","_jsxs","className","children","_jsx","name","description","amount","IconButton","size","color","onClick","DeleteIcon","Initial_state","_useState","useState","_useState2","_slicedToArray","enteredInput","setenteredInput","useSelector","state","expenseslice","Dispatch","addEnteredInput","e","_objectSpread","_defineProperty","target","value","style","marginTop","TextField","sx","m","p","type","onChange","label","variant","Button","width","sm","md","borderColor","preventDefault","obj","_callee","jsondata","_context","JSON","stringify","body","_x","postData","startIcon","AddToQueueOutlined","_ref$totalcount","totalcount","setPagecount","anchorEl","setAnchorEl","open","Boolean","handleClose","myValue","currentTarget","dataset","pages","useMemo","Math","ceil","undefined","event","Menu","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_toConsumableArray","Array","map","_","index","MenuItem","valueHandler","iscall","PaginationList","count","Page","setPage","_useState3","_useState4","React","Box","display","flexDirection","DropDownExpense","Stack","spacing","Pagination","defaultPage","shape","expenses","call","LeaderBoard","ispremium","useEffect","getLeaderBoard","ExpenseForm","Table","stripe","hoverRow","mt","each","ListItem","Hide","setHide","show","setshow","LeaderBoarddata","testfun","Grid","container","alignItems","xs","Paper","bgcolor","gridTemplateColumns","gap","totalcost","transformData","key","push","transData"],"sourceRoot":""}